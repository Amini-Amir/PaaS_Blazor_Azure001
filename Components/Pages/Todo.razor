@page "/todos"
@using Microsoft.AspNetCore.Components.Web
@rendermode InteractiveServer

<PageTitle>Todo</PageTitle>

<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-lg-8 col-xl-6">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <div class="d-flex justify-content-between align-items-center">
                        <h3 class="card-title mb-0">üìù Todo List</h3>
                        <span class="badge bg-light text-primary fs-6">@todos.Count(t=>!t.IsDone) active</span>
                    </div>
                </div>

                <div class="card-body p-0">
                    @if(todos.Count() < 1){
                        <div class="text-center py-5">
                            <div class="mb-3">
                                <i class="bi bi-check2-circle" style="font-size: 3rem; color: #dee2e6;"></i>
                            </div>
                            <p class="text-muted">No todos yet. Add one below!</p>
                        </div>
                    } else {
                        <ul class="list-group list-group-flush">
                            @foreach(TodoItem todo in todos.OrderBy(t => t.IsDone).ThenByDescending(t => t.id)){
                                <li class="list-group-item">
                                    <div class="d-flex align-items-center">
                                        <input class="form-check-input me-3" 
                                               type="checkbox" 
                                               style="width:1.5em; height:1.5em;" 
                                               @bind="todo.IsDone" />
                                        
                                        @if(todo.IsEditing) {
                                            <input class="form-control me-3 flex-grow-1" 
                                                   @bind="todo.EditBuffer" 
                                                   @onkeydown="@((KeyboardEventArgs e) => OnEditInputKeyDown(e, todo))"
                                                   style="font-size: 1.1rem;" />
                                        } else {
                                            <div class="flex-grow-1 me-3">
                                                <span class="@(todo.IsDone ? "text-decoration-line-through text-muted" : "text-dark")" 
                                                      style="font-size: 1.1rem; font-weight: @(todo.IsDone ? "normal" : "500")">
                                                    @todo.Title
                                                </span>
                                            </div>
                                        }

                                        <div class="btn-group">
                                            @if(todo.IsEditing) {
                                                <button class="btn btn-success btn-sm" @onclick="()=>SaveEdit(todo)">
                                                    <i class="bi bi-check"></i> Save
                                                </button>
                                                <button class="btn btn-secondary btn-sm" @onclick="()=>CancelEdit(todo)">
                                                    <i class="bi bi-x"></i> Cancel
                                                </button>
                                            } else {
                                                <button class="btn btn-outline-primary btn-sm" @onclick="()=>StartEdit(todo)">
                                                    <i class="bi bi-pencil"></i> Edit
                                                </button>
                                            }
                                            <button class="btn btn-outline-danger btn-sm" @onclick="()=>todos.Remove(todo)">
                                                <i class="bi bi-trash"></i> Delete
                                            </button>
                                        </div>
                                    </div>
                                </li>
                            }
                        </ul>
                    }
                </div>

                <div class="card-footer bg-light">
                    <div class="d-flex gap-2">
                        <input class="form-control" 
                               placeholder="What needs to be done?" 
                               @bind="newTodoTitle" 
                               @onkeydown="@OnNewTodoInputKeyDown"
                               style="font-size: 1.1rem;" />
                        <button class="btn btn-primary px-4" @onclick="AddTodo">
                            <i class="bi bi-plus-lg"></i> Add
                        </button>
                    </div>
                    @if(todos.Any()) {
                        <div class="mt-2 text-center">
                            <small class="text-muted">
                                @todos.Count(t=>!t.IsDone) of @todos.Count tasks remaining
                            </small>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code{
    private List<TodoItem> todos = new List<TodoItem>();
    private string newTodoTitle = string.Empty;

    private void AddTodo(){
        if(!string.IsNullOrWhiteSpace(newTodoTitle)){
            todos.Add(new TodoItem{ 
                id = nextId++, 
                Title = newTodoTitle.Trim(), 
                IsDone = false
            });
            newTodoTitle = string.Empty;
        }
    }

    private void StartEdit(TodoItem todo) {
        todo.IsEditing = true;
        todo.EditBuffer = todo.Title ?? string.Empty;
    }

    private void SaveEdit(TodoItem todo) {
        if(!string.IsNullOrWhiteSpace(todo.EditBuffer)) {
            todo.Title = todo.EditBuffer.Trim();
        }
        todo.IsEditing = false;
        todo.EditBuffer = string.Empty;
    }

    private void CancelEdit(TodoItem todo) {
        todo.IsEditing = false;
        todo.EditBuffer = string.Empty;
    }

    private int nextId = 1;

    private void OnEditInputKeyDown(KeyboardEventArgs e, TodoItem todo)
    {
        if (e.Key == "Enter")
        {
            SaveEdit(todo);
        }
    }

    private void OnNewTodoInputKeyDown(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            AddTodo();
        }
    }

    public class TodoItem{
        public int id {set; get;}
        public string? Title {set; get;}
        public bool IsDone {set; get;}
        public bool IsEditing {get; set;} = false;
        public string EditBuffer {get; set;} = string.Empty;
    }
}
